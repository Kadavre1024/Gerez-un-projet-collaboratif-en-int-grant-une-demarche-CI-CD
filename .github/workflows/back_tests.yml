# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    permissions:
      checks: write
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: Build project
      run: mvn clean package
      working-directory: back

    - name: Jacoco Report to PR
      id: jacoco
      uses: madrapps/jacoco-report@v1.6.1
      with:
        paths: ${{ github.workspace }}/back/target/site/jacoco/jacoco.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 0
        min-coverage-changed-files: 0
        title: '# :lobster: Coverage Report'
        pass-emoji: ':green_circle:'
        fail-emoji: ':red_circle:'

    - name: Get the Coverage info
      run: |
        echo "Total coverage ${{ steps.jacoco.outputs.coverage-overall }}" >> $GITHUB_STEP_SUMMARY
        echo "Changed Files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}" >> $GITHUB_STEP_SUMMARY
  report:
    runs-on: ubuntu-latest
    steps:
    - uses: phoenix-actions/test-reporting@v8
      id: test-report                     # Set ID reference for step
      with:
        artifact: test-results            # artifact name
        name: Junit Tests                  # Name of the check run which will be created
        path: '${{ github.workspace }}/back/target/site/jacoco/jacoco.xml'         # Path to test results (inside artifact .zip)
        token: ${{ secrets.GITHUB_TOKEN }}                    
        reporter: java-junit              # Format of test results
    
